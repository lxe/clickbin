mixin link(link, authosizedUser)
  li.clearfix.link(data-linkid="#{link._id}")
    .well(class=(link.public)?'':'private')
      if authorizedUser
        .controls
          a(href="/_/link/#{link.id}/remove").close
            i.icon-trash
          .edit.close
            i.icon-edit
           .close
            if(link.public)
              a(href="/_/link/#{link.id}/update?public=false")
                i.icon-eye-close(rel="tooltip", data-original-title="click to make this link private")
            else
              a(href="/_/link/#{link.id}/update?public=true")
                i.icon-eye-open(rel="tooltip", data-original-title="click to make this link public")
      a.clearfix(href='/_/click/link/' + link._id , title=link.title, target="_blank", rel="nofollow")
        .minwidth.clearfix
          .icon
            if (link.icon)
              img(src="#{link.icon}")
            else if(link.mime)
              if(link.mime==='text/html')
                img(src="/_/apple-touch-icon-precomposed.png")
              else
                img(src="/_/images/mimetypes/" + link.mime.replace('/','-') + '.png')
            else
              //- the link is probably a 404
              .icon(style="font-size: 64px; line-height:64px;height:64px")
                i.icon-warning-sign(style="width:64px;height:64px;margin-top:16px") 
          .text
            .text-container
              if (link.title)
                .title.ellipsis #{link.title}
              else
                .title.ellipsis #{link.url}
              if(link.desc)
                .url.ellipsis #{link.desc}
              else
                .url.ellipsis #{link.url}
          .tags
            each tag in link.tags
              if path.indexOf('/' + tag + '/') !== -1
                - var href = path.replace('/' + tag + '/' , '/')
              else
                - var href = path + tag
              a(href=href)
                span.badge( class = ( tagHash[tag]? 'badge-info' : '') ) 
                  != tag
                | 